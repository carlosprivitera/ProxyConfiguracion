
package client;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Stroke;

import java.awt.image.BufferedImage;

import java.io.File;
import java.io.IOException;

import java.net.URI;
import java.net.URISyntaxException;

import java.text.SimpleDateFormat;

import java.util.Date;

import javax.imageio.ImageIO;

import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Carlos
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    private ImageIcon imagen = new ImageIcon(this.getClass().getResource("rgb.png"));
    private boolean RGBoCMY = false;
    private int R=127, G=127, B=127;

    /** Creates new form VentanaPrincipal */
    public VentanaPrincipal() {
        initComponents();
        RGBoCMY=this.jCheckBox1.isSelected();
        this.setIconImage(imagen.getImage());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jPanel1 = new javax.swing.JPanel() {

            @Override
            public void repaint() {
                // TODO Implement this method
                super.repaint();
                miRepaint();
            }

            @Override
            public void paint(Graphics g) {
                // TODO Implement this method
                super.paint(g);
                miPaint(g);
            }

        };
        jToolBar1 = new javax.swing.JToolBar();
        jPanel2 = new javax.swing.JPanel();
        jScrollBar1 = new javax.swing.JScrollBar();
        jScrollBar2 = new javax.swing.JScrollBar();
        jScrollBar3 = new javax.swing.JScrollBar();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cubo de colores RGB/CMY");
        setPreferredSize(new java.awt.Dimension(600, 650));
        setResizable(false);
        getContentPane().setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 565, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setMinimumSize(new java.awt.Dimension(227, 100));
        jToolBar1.setPreferredSize(new java.awt.Dimension(277, 100));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 90));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 90));
        jPanel2.setLayout(new java.awt.GridLayout(3, 1, 0, 5));

        jScrollBar1.setBackground(new java.awt.Color(255, 0, 0));
        jScrollBar1.setMaximum(265);
        jScrollBar1.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        jScrollBar1.setToolTipText("Rojo");
        jScrollBar1.setValue(127);
        jScrollBar1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                jScrollBar1AdjustmentValueChanged(evt);
            }
        });
        jPanel2.add(jScrollBar1);

        jScrollBar2.setBackground(new java.awt.Color(0, 255, 0));
        jScrollBar2.setMaximum(265);
        jScrollBar2.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        jScrollBar2.setToolTipText("Verde");
        jScrollBar2.setValue(127);
        jScrollBar2.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                jScrollBar2AdjustmentValueChanged(evt);
            }
        });
        jPanel2.add(jScrollBar2);

        jScrollBar3.setBackground(new java.awt.Color(0, 0, 255));
        jScrollBar3.setMaximum(265);
        jScrollBar3.setOrientation(javax.swing.JScrollBar.HORIZONTAL);
        jScrollBar3.setToolTipText("Azul");
        jScrollBar3.setValue(127);
        jScrollBar3.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                jScrollBar3AdjustmentValueChanged(evt);
            }
        });
        jPanel2.add(jScrollBar3);

        jToolBar1.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(3, 2, 10, 0));

        jButton1.setText("Cara oculta");
        jButton1.setToolTipText("Pinta las caras ocultas del cubo");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1);

        jLabel1.setText("jLabel1");
        jLabel1.setToolTipText("Proporción de colores primarios para obtener un color secundario");
        jPanel3.add(jLabel1);

        jButton3.setText("Cubo xyz");
        jButton3.setToolTipText("Pinta el cubo interno a partir del color seleccionado");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3);

        jCheckBox1.setSelected(true);
        jCheckBox1.setText("RGB/CMY");
        jCheckBox1.setToolTipText("Seleccionar el modelo de color RGB <===> CMY");
        jCheckBox1.setFocusable(false);
        jCheckBox1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jCheckBox1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jPanel3.add(jCheckBox1);

        jButton2.setText("GitHub");
        jButton2.setToolTipText("Descargar última versión");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton2);

        jButton4.setText("Blog");
        jButton4.setToolTipText("Visitar el Blog de Carlos Privitera");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton4);

        jToolBar1.add(jPanel3);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        pack();
    }//GEN-END:initComponents

    private void jScrollBar1AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBar1AdjustmentValueChanged
        // TODO add your handling code here:
        R=jScrollBar1.getValue();    
        if(this.jScrollBar1.isEnabled()==false) { 
            jPanel1.repaint(); // miRepaint();
            pintarCuboXYZ();
           // jPanel1.repaint(); // miRepaint();
        }else{
            jPanel1.repaint(); // miRepaint();
        }
    }//GEN-LAST:event_jScrollBar1AdjustmentValueChanged
    private void jScrollBar2AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBar2AdjustmentValueChanged
        // TODO add your handling code here:
        G=jScrollBar2.getValue();
        jPanel1.repaint(); //miRepaint();
    }//GEN-LAST:event_jScrollBar2AdjustmentValueChanged

    private void jScrollBar3AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBar3AdjustmentValueChanged
        // TODO add your handling code here:
        B=jScrollBar3.getValue();
        jPanel1.repaint(); //miRepaint();
    }//GEN-LAST:event_jScrollBar3AdjustmentValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Graphics2D g = (Graphics2D) jPanel1.getGraphics();//this.getGraphics();
        for(short x=0;x<=R;x++){
            for(short y=0;y<=G;y++){
                punto3Da2D(x,y,0, g);
            }
        }
        for(short y=0;y<=G;y++){
            for(short z=0;z<=B;z++){
                punto3Da2D(0,y,z, g);
            }
        }
        for(short x=0;x<=R;x++){
            for(short z=0;z<=B;z++){
                punto3Da2D(x,0,z, g);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        pintarCuboXYZ();
    }//GEN-LAST:event_jButton3ActionPerformed
    private void pintarCuboXYZ(){
        Graphics2D g = (Graphics2D)jPanel1.getGraphics(); //this.getGraphics();
        for(short x=0;x<=R;x++){
            for(short y=0;y<=G;y++){
                punto3Da2D(x,y,B, g);
            }
        }
        for(short x=0;x<=R;x++){
            for(short z=0;z<=B;z++){
                punto3Da2D(x,G,z, g);
            }
        }        
        for(short y=0;y<=G;y++){
            for(short z=0;z<=B;z++){
                punto3Da2D(R,y,z, g);
            }
        } 
    }
    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(this.jCheckBox1.isSelected()==false){
            RGBoCMY=false;
            this.jScrollBar1.setBackground(Color.cyan);
            this.jScrollBar2.setBackground(Color.magenta);
            this.jScrollBar3.setBackground(Color.yellow);
            jPanel1.repaint(); // miRepaint();
        }else{
            RGBoCMY=true;
            this.jScrollBar1.setBackground(Color.red);
            this.jScrollBar2.setBackground(Color.green);
            this.jScrollBar3.setBackground(Color.blue);
            jPanel1.repaint(); //miRepaint();
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
                    URI uri = new URI("https://carlosprivitera.blogspot.com.ar/");
                    Desktop.getDesktop().browse(uri);
        } catch (URISyntaxException ex) {
        }catch(IOException ex){
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
                    URI uri = new URI("https://github.com/carlosprivitera");
                    Desktop.getDesktop().browse(uri);
        } catch (URISyntaxException ex) {
        }catch(IOException ex){
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                     null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                     null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                     null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE,
                                                                                     null, ex);
        }
        //</editor-fold>
        */
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaPrincipal vp = new VentanaPrincipal();
                vp.setDefaultCloseOperation(vp.EXIT_ON_CLOSE);
                vp.setLocationRelativeTo(null);
                vp.setVisible(true);
                //new VentanaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollBar jScrollBar2;
    private javax.swing.JScrollBar jScrollBar3;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    public void miRepaint() {
        // TODO Implement this method
        //super.repaint();
    }
    
    public void miPaint(Graphics g) {
        // TODO Implement this method
        Graphics2D g2 = (Graphics2D) g;
        g2.setColor(Color.GRAY);
        Stroke sx = g2.getStroke();
        Stroke s = new BasicStroke(5.0f);
        g2.setStroke(s);
        g2.drawLine(300, 300, 600, 300);
        g2.drawLine(300, 0, 300, 300);
        g2.drawLine(0, 600, 300, 300);
        
        Stroke s3 = new BasicStroke(3.0f);
        g2.setStroke(s3);
        if(RGBoCMY==false) {
          g2.setColor(new Color(255-255,255-0,255-0,255));
        }else{
          g2.setColor(new Color(255,0,0,255));  
        }    
        linea3Da2D(0,0,0,R,0,0,g2);
        if(RGBoCMY==false) {
          g2.setColor(new Color(255-0,255-255,255-0,255));
        }else{
          g2.setColor(new Color(0,255,0,255));  
        }
        linea3Da2D(0,0,0,0,G,0,g2);
        if(RGBoCMY==false) {
          g2.setColor(new Color(255-0,255-0,255-255));
        }else{
          g2.setColor(new Color(0,0,255));  
        }
        linea3Da2D(0,0,0,0,0,B,g2);

        g2.setStroke(sx);
        g2.setColor(Color.BLACK);
        linea3Da2D(0,0,0,R,G,B,g2);
        
        if(RGBoCMY==false) {
          g2.setColor(new Color(255-R,255-G,255-B,255));
        }else{
          g2.setColor(new Color(R,G,B,255));  
        }
        circulo3Da2D(R,G,B,g2);
        
        pintaCuboBlancoExterior(g2);
        
        if(RGBoCMY==false) {
            this.jLabel1.setText("CMY(" + R + ":" + G + ":" + B + ")" );
        }else{
            this.jLabel1.setText("RGB(" + R + ":" + G + ":" + B + ")" );
        }
    }
    private void linea3Da2D(int x1, int y1, int z1, int x2, int y2, int z2, Graphics2D g){
        g.drawLine(300+x1-(int)(z1*0.7f), 300-y1+(int)(z1*0.7f), 300+x2-(int)(z2*0.7f), 300-y2+(int)(z2*0.7f));
    }
    private void circulo3Da2D(int x1, int y1, int z1, Graphics2D g){
       g.fillOval(300+x1-(int)(z1*0.7f)-15, 300-y1+(int)(z1*0.7f)-15, 30, 30);  
    }
    private void punto3Da2D(int x1, int y1, int z1, Graphics2D g){
      if(RGBoCMY==false) {  
        g.setColor(new Color(255-x1,255-y1,255-z1,255));  
      }else{
        g.setColor(new Color(x1,y1,z1,255));    
      }
      g.fillOval(300+x1-(int)(z1*0.7f), 300-y1+(int)(z1*0.7f), 1, 1);   
    }
    private void pintaCuboBlancoExterior(Graphics2D g){
        g.setColor(Color.gray);
        linea3Da2D(0,G,B,R,G,B,g);
        linea3Da2D(0,G,0,R,G,0,g);
        
        linea3Da2D(0,0,B,0,G,B,g);
        linea3Da2D(0,0,B,R,0,B,g);
        
        linea3Da2D(R,0,B,R,G,B,g);
        linea3Da2D(R,0,0,R,G,0,g);

        linea3Da2D(0,G,B,0,G,0,g);        
        linea3Da2D(R,0,B,R,0,0,g);
        linea3Da2D(R,G,B,R,G,0,g);
    }    
}
